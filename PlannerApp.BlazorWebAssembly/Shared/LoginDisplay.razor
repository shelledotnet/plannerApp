@inject Blazored.LocalStorage.ILocalStorageService Storage
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager Navigation
<AuthorizeView>
    <Authorized>
        <MudMenu Icon="@Icons.Material.Filled.Person" Color="Color.Inherit" Direction="Direction.Right" OffsetY="true">
            <MudMenuItem>Welcome @context.User.FindFirst(ClaimTypes.GivenName).Value</MudMenuItem>
            <MudMenuItem OnClick="LogOutAsync">LogOut</MudMenuItem>
           
        </MudMenu>

    </Authorized>
    <NotAuthorized>
        @*<MudMenu Icon="@Icons.Filled.Login" Color="Color.Secondary" OnClick='()=> Navigation.NavigateTo("/auth/login")' />*@
        <MudLink Href="/auth/login">
            <MudMenu Icon="@Icons.Filled.Login" Color="Color.Secondary" />
        </MudLink>
    </NotAuthorized>
</AuthorizeView>

@code {
    private async Task LogOutAsync()
    {
        await Storage.RemoveItemAsync("access_token");
        await Storage.RemoveItemAsync("expiry_date");

        await AuthenticationStateProvider.GetAuthenticationStateAsync();
        Navigation.NavigateTo("/auth/login");
    }
}
